pluginManagement {
    repositories {
        mavenLocal()
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // Buildscript
            plugin('shadow', 'com.github.johnrengelman.shadow').version('8.1.1')
            plugin('licenser', 'org.cadixdev.licenser').version('0.6.1')
            plugin('blossom', 'net.kyori.blossom').version('1.2.0')
            plugin('indra-git', 'net.kyori.indra.git').version('2.1.1')

            // Bukkit
            version('bukkit_minimum', '1.8.8-R0.1-SNAPSHOT')
            version('bukkit1_12',     '1.12.2-R0.1-SNAPSHOT')
            version('bukkit_latest',  '1.20.1-R0.1-SNAPSHOT')
            version('folia',          '1.20.1-R0.1-SNAPSHOT')
            library('paperapi', 'io.papermc.paper', 'paper-api').versionRef('bukkit_latest')
            library('spigotapi', 'org.spigotmc', 'spigot-api').versionRef('bukkit_minimum')
            library('spigotapi-onetwelve', 'org.spigotmc', 'spigot-api').versionRef('bukkit1_12')
            library('folia', 'dev.folia', 'folia-api').versionRef('folia')

            // Bungee
            library('bungee', 'net.md-5', 'bungeecord-api').version('1.17-R0.1-SNAPSHOT')

            // Sponge
            version('sponge', '8.0.0')
            library('spongeapi', 'org.spongepowered', 'spongeapi').versionRef('sponge')
            plugin('spongeplugin', 'org.spongepowered.gradle.plugin').version('2.0.0')

            // Velocity
            library('velocity', 'com.velocitypowered', 'velocity-api').version('3.0.0')

            // DependencyDownload
            version('dependencydownload', '1.3.1-SNAPSHOT')
            plugin('dependencydownload-plugin', 'dev.vankka.dependencydownload.plugin').versionRef('dependencydownload')
            library('dependencydownload-runtime', 'dev.vankka', 'dependencydownload-runtime').versionRef('dependencydownload')
            library('dependencydownload-jarinjar-bootstrap', 'dev.vankka', 'dependencydownload-jarinjar-bootstrap').versionRef('dependencydownload')
            library('dependencydownload-jarinjar-loader', 'dev.vankka', 'dependencydownload-jarinjar-loader').versionRef('dependencydownload')

            // MinecraftDependencyDownload
            version('mcdependencydownload', '1.0.0-SNAPSHOT')
            library('mcdependencydownload-bukkit-bootstrap', 'dev.vankka', 'minecraftdependencydownload-bukkit').versionRef('mcdependencydownload')
            library('mcdependencydownload-bukkit-loader', 'dev.vankka', 'minecraftdependencydownload-bukkit-loader').versionRef('mcdependencydownload')
            library('mcdependencydownload-bungee-bootstrap', 'dev.vankka', 'minecraftdependencydownload-bungee').versionRef('mcdependencydownload')
            library('mcdependencydownload-bungee-loader', 'dev.vankka', 'minecraftdependencydownload-bungee-loader').versionRef('mcdependencydownload')
            library('mcdependencydownload-velocity', 'dev.vankka', 'minecraftdependencydownload-velocity').versionRef('mcdependencydownload')

            // Annotations
            library('jetbrains-annotations', 'org.jetbrains', 'annotations').version('23.0.0')
            library('findbugs-annotations', 'com.google.code.findbugs', 'jsr305').version('3.0.2')

            // JDA
            library('jda', 'net.dv8tion', 'JDA').version('5.0.0-beta.10.webhooks_2')

            // OkHTTP
            library('okhttp', 'com.squareup.okhttp3', 'okhttp').version('4.11.0')

            // Apache commons
            library('commons-lang', 'org.apache.commons', 'commons-lang3').version('3.12.0')
            library('commons-io', 'commons-io', 'commons-io').version('2.11.0')

            // Caffeine
            library('caffeine', 'com.github.ben-manes.caffeine', 'caffeine').version {
                prefer '2.9.3'
                reject '[3,)' // Java 11
            }

            // DynamicProxy
            library('dynamicproxy', 'dev.vankka', 'dynamicproxy').version('1.0.0')

            // Jackson
            library('jackson-databind', 'com.fasterxml.jackson.core', 'jackson-databind').version('2.14.2')

            // Config(urate)
            version('configurate', '4.2.0-yamlbranch-4')
            library('configurate-yaml', 'org.spongepowered', 'configurate-yaml').versionRef('configurate')

            // DB
            library('hikaricp', 'com.zaxxer', 'HikariCP').version {
                prefer '4.0.3'
                reject '[5,)' // Java 11
            }
            library('h2', 'com.h2database', 'h2').version('2.1.210')
            library('mysql', 'mysql', 'mysql-connector-java').version('8.0.28')
            library('mariadb', 'org.mariadb.jdbc', 'mariadb-java-client').version('3.1.4')

            // MinecraftAuth lib
            library('minecraftauth-lib', 'me.minecraftauth', 'lib').version('1.1.0')

            // Brigadier & Commodore
            library('brigadier', 'com.mojang', 'brigadier').version('1.0.18')
            library('commodore', 'me.lucko', 'commodore').version('2.2')

            // Integrations
            library('luckperms', 'net.luckperms', 'api').version('5.4')
            library('vaultapi', 'net.milkbowl.vault', 'VaultAPI').version('1.7')
            library('placeholderapi-bukkit', 'me.clip', 'placeholderapi').version('2.11.1')
            library('townychat', 'com.palmergames.bukkit', 'TownyChat').version('0.45')
            library('venturechat', 'mineverse.aust1n46', 'venturechat').version('3.5.0')
            library('chatty', 'ru.mrbrikster', 'chatty-api').version('2.19.13')
            library('lunachat', 'com.github.ucchyocean.lc', 'LunaChat').version('3.0.16')
            library('mcmmo', 'com.gmail.nossr50', 'mcmmo').version('2.1.220')
            library('griefprevention', 'me.ryanhamshire', 'GriefPrevention').version('16.18.1')

            // Logging
            library('slf4j-api', 'org.slf4j', 'slf4j-api').version('1.7.36')
            library('log4j-core', 'org.apache.logging.log4j', 'log4j-core').version('2.0-beta9')

            // Adventure
            version('adventure', '4.14.0-SNAPSHOT')
            library('adventure-api', 'net.kyori', 'adventure-api').versionRef('adventure')
            library('adventure-serializer-plain', 'net.kyori', 'adventure-text-serializer-plain').versionRef('adventure')
            library('adventure-serializer-legacy', 'net.kyori', 'adventure-text-serializer-legacy').versionRef('adventure')
            library('adventure-serializer-gson', 'net.kyori', 'adventure-text-serializer-gson').versionRef('adventure')
            library('adventure-serializer-ansi', 'net.kyori', 'adventure-text-serializer-ansi').versionRef('adventure')

            // Adventure Platform
            version('adventure-platform', '4.3.0')
            library('adventure-platform-bukkit', 'net.kyori', 'adventure-platform-bukkit').versionRef('adventure-platform')
            library('adventure-platform-bungee', 'net.kyori', 'adventure-platform-bungeecord').versionRef('adventure-platform')
            library('adventure-serializer-bungee', 'net.kyori', 'adventure-text-serializer-bungeecord').versionRef('adventure-platform')

            // Upgrade ansi (used by ansi serializer)
            library('kyori-ansi', 'net.kyori', 'ansi').version('1.1.0-SNAPSHOT')

            // MCDiscordReserializer & EnhancedLegacyText
            library('mcdiscordreserializer', 'dev.vankka', 'mcdiscordreserializer').version('4.4.0-SNAPSHOT')
            library('enhancedlegacytext', 'dev.vankka', 'enhancedlegacytext').version('2.0.0-SNAPSHOT')

            // JUnit
            version('junit', '5.9.2')
            library('jupiter-api', 'org.junit.jupiter', 'junit-jupiter-api').versionRef('junit')
            library('jupiter-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef('junit')
        }
    }
}

rootProject.name = 'DiscordSRV-Ascension'

[
        'common', 'common:api', 'common:unrelocate',
        'i18n',
        'api',
        'bukkit', 'bukkit:loader', 'bukkit:folia', 'bukkit:paper', 'bukkit:bukkit1_12',
        'bungee', 'bungee:loader',
        'sponge', 'sponge:loader',
        'velocity'
].each {
    include it
    findProject(':' + it).name = String.join('-', it.split(':'))
}
